'================================================Типы данных python======================================'
# 1) изменяемые (dict set list)
# 2) неименяемые (tuple int string float bool None frozenset)
'===============================================Numbers=================================================='
# числа - неименяемый неитерируемый тип данных для хранения числ и проведения над ними арифметических действий

int # целые
float # десятичные
# Decimal # более точные чем float
'===============================================String================================================='
# строка - неизменяемый, итерируемый, индексируемый тип данных предназначенный для хранения строк последовательности символов заключенных в ковычки
str1 = 'hello'
str2 = "hello"
str3 = """hello"""
str4 = '''hello'''
# error = 'hello"
'================================================Индексы======================================'
# индексы - нумерация  каждого элемента которая начинается с 0
string = 'hello world'
print(string[-1])
'==============================================Срезы========================================'
# срезы это часть последовательности  (в случае со строками срез дает нам подстроку) начало:конец:шаг
string = 'some string'
print(string[0:4])
print(string[:4])
'============================================LIst========================================'
# список - изменяемый итерируемый тип данных для хранения последовательности элементов может содержать любые типы данных
list1 = [1, 'str', None, False, True, [1], {1: 2}, 1.1]

list1[-1]
'===========================================Tuple==========================================================='
# tuple неизменяемый индексируемый итерируемый тип данных литералы - запятые. По сути просто неизменяемый список
tuple1 = (1,)
tuple2 = 1,2,3,4,5,5 # tuple
'===============================================Set===================================='
# Множество(set) - изменяемый неупорядоченный итерируемый неиндексируемый тип данных предназначенный для хранения уникальных значений. Множества могут хранить в себе только не изменяемые типы данных
set1 = {} # dict
set1 = set() # set
set2 = {1, 1, 1, 1, 1, 1, 2, 3, 2, 2, 2, 2}
set3 = {1, 0, True, False} # {1, 0}
'=========================================Frozenset================================================'
# Frozenset - неизменяемый set, вске методы которые были у сет во frozenset отсутствуют
f_set = frozenset([1, 2, 4, 5, 6, 1, 11, ])
'==========================================Dict==============================================='
# dict - изменяемый итерируемый неупорядоченный неиндекмируемый тип данных для хранения данных в парах (ключ:значение)
# ключи - должны убыть только неизменяемые типы данных
# если ключом будет кортеж то в нем тоже должны быть только не изменяемые типы данных
# если ключи одинаковые то сохранится только последние значение
dict1 = {'a': 1, 'b': 2, 'a': 3}

'=============================================Bool==========================================='
# bool - логический тип данных с двумя занчениями  1 0
'=============================================None type==============================='
#None - ничего
'===========================================Conditions==============================='
# условие - конструкция которая при разных условия позваляет выполнять или не выполнятть какой то кусок кода который находится в теле условия
# if условие1:
#     ...
# elif условие2:
#     ...
# else: 
#     ...
'===============================================Тернарные операторы========================='
# тернарные операторы - условие if else в одну строчку
# res1 if условие else res2
# continue - пропускает 1 шаг итерацию
# break - полностью останавливает код
'=========================================Циклы==============================================='
# цикл - блок кодла который будет выполняться несколько раз
# итератор - 1 круг цикла
# итератор - for
# итерируемый объект по которому мы проходимся циклов
# for цикл которыйй проходится по элементам итерируемого объекта (str list dict set tuple range) в цикле фор мы выполняем какие то операции над элементами объекта останавливается когда доходит до последнего  элемента последовательности

list1 = [1, 2, 3, 4, 5]
for i in list1:
    print(i)
# while - цикл который работает до тех пор пока ксловие которое ему было задано верное True может быть бесконечным
# num = 10
# while num:
#     print(num)